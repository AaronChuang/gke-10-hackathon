{
  "app": {
    "title": "Online Boutique Headquarters",
    "subtitle": "AI-Driven E-commerce Management Center"
  },
  "navigation": {
    "strategy": "Strategy",
    "agents": "Agents",
    "knowledge": "Knowledge Base",
    "operations": "Operations"
  },
  "strategy": {
    "title": "Business Consultant AI - Strategic Advice for Your E-commerce Business",
    "subtitle": "Consult our professional business consultant agent for market trends, organizational development, and capability expansion advice",
    "welcome": {
      "title": "Welcome to Business Consulting Service",
      "description": "I am your dedicated business consultant AI, providing the following advice:",
      "marketTrends": {
        "title": "Market Trend Analysis",
        "description": "Based on the latest fashion trends, what types of products should you introduce?"
      },
      "organizationalDevelopment": {
        "title": "Organizational Development Advice",
        "description": "To improve customer satisfaction, what kind of AI department should the company add?"
      },
      "capabilityExpansion": {
        "title": "Capability Expansion Advice",
        "description": "To make the customer service department more efficient, what tools should be added?"
      }
    },
    "chat": {
      "placeholder": "Please enter your business questions or requirements...",
      "send": "Send",
      "hint": "Press Enter to send, Shift + Enter for new line",
      "you": "You",
      "consultant": "Business Consultant AI",
      "typing": "Typing..."
    },
    "errors": {
      "networkError": "Network request failed",
      "noResponse": "Sorry, I cannot provide advice right now. Please try again later.",
      "sendFailed": "Failed to send message:",
      "connectionError": "Sorry, I cannot respond to your question right now. Please check your network connection or try again later."
    }
  },
  "agents": {
    "title": "AI Agent Management",
    "subtitle": "Manage and monitor your AI agents",
    "createButton": "Create Agent",
    "stats": {
      "total": "Total Agents",
      "active": "Active Agents",
      "creating": "Creating",
      "failed": "Failed"
    },
    "table": {
      "title": "Agent List",
      "allStatus": "All Status",
      "name": "Name",
      "description": "Description",
      "status": "Status",
      "capabilities": "Capabilities",
      "topic": "Pub/Sub Topic",
      "created": "Created",
      "actions": "Actions"
    },
    "status": {
      "active": "Active",
      "inactive": "Inactive",
      "creating": "Creating",
      "failed": "Failed"
    },
    "actions": {
      "viewDetails": "View Details"
    },
    "create": {
      "title": "Create New Agent",
      "name": "Agent Name",
      "namePlaceholder": "e.g., MarketingAgent",
      "pubsubTopic": "Pub/Sub Topic",
      "pubsubTopicPlaceholder": "e.g., marketing-agent-topic",
      "pubsubTopicHelp": "Leave empty to auto-generate",
      "description": "Description",
      "descriptionPlaceholder": "Describe the agent's main functions and purposes...",
      "capabilities": "Capability Tags",
      "capabilityPlaceholder": "Enter capability tag and press Enter",
      "capabilityHelp": "e.g., Content Writing, Market Analysis, Data Processing",
      "systemPrompt": "System Prompt",
      "systemPromptPlaceholder": "Define the agent's role, behavior and response style...",
      "systemPromptHelp": "This will determine the agent's personality and expertise",
      "creating": "Creating...",
      "submit": "Create Agent"
    },
    "details": {
      "title": "Agent Details",
      "basicInfo": "Basic Information",
      "name": "Name",
      "status": "Status",
      "created": "Created Time",
      "pubsubTopic": "Pub/Sub Topic",
      "description": "Description",
      "capabilities": "Capabilities",
      "systemPrompt": "System Prompt"
    },
    "developmentNotice": {
      "title": "üöß Under Development: Dynamic AI Agent Management System üöß",
      "intro": "Welcome to the management core of the AI agent ecosystem! The complete functionality of this page is still under active development. What you see here is the final architectural blueprint we've designed. We envision a dynamic framework that enables 'AI Organization Self-Expansion':",
      "features": {
        "onboarding": {
          "title": "ü§ñ Fully Automated Agent Onboarding",
          "description": "All new agent creation will be initiated by the core OrchestratorAgent (CEO). It acts like an HR manager, intelligently generating new agent configurations (such as Prompts and tool suggestions) based on your job description input, and establishing personnel files in Firestore's 'Agent Registry'."
        },
        "provisioning": {
          "title": "üöÄ Dynamic Infrastructure as Code Provisioning",
          "description": "Once an agent's personnel file is created, the system automatically triggers a process: using omni-agent-deployment.yaml as a template, it parametrically deploys a dedicated GKE Pod for this new 'employee' and opens an independent Pub/Sub 'internal communication channel'."
        },
        "registration": {
          "title": "üì° Event-Driven Service Registration",
          "description": "After the newly deployed Pod starts up, it actively announces to the system 'I'm online!' A resident agent-registry-listener service captures this signal and updates the agent's status to ACTIVE in the registry, making it officially a member capable of accepting tasks."
        },
        "delegation": {
          "title": "ü§ù Decentralized, Intelligent Delegation",
          "description": "In this ecosystem, any agent (not just the Orchestrator) can query the 'Agent Registry' after receiving a task to understand all colleagues' capabilities. This enables them to forward tasks to the most suitable expert agent based on current context, achieving efficient A2A (Agent-to-Agent) collaboration."
        },
        "guardrails": {
          "title": "üõ°Ô∏è Built-in Anti-Loop Guardrails",
          "description": "To ensure system stability and resource efficiency, we've designed tracking mechanisms in Firestore's task management. Any task can only be handled by the same agent a maximum of twice. If it's transferred back to the same agent for a third time, the task will be forcibly terminated and marked as an error to avoid infinite loops."
        }
      }
    }
  },
  "operations": {
    "title": "Operations Center - Tasks & Conversations Management",
    "subtitle": "Monitor all task workflows and customer conversation history, track costs and execution logs",
    "tabs": {
      "tasks": "Task Management",
      "conversations": "Conversation History"
    },
    "stats": {
      "total": "Total Tasks",
      "pending": "Pending",
      "completed": "Completed",
      "tokens": "Total Token Usage"
    },
    "tasks": {
      "table": {
        "taskId": "Task ID",
        "status": "Status",
        "creator": "Creator",
        "currentDept": "Current Department",
        "tokens": "Token Usage",
        "created": "Created Time",
        "actions": "Actions",
        "view": "View"
      },
      "status": {
        "pending": "Pending",
        "running": "Running",
        "completed": "Completed",
        "failed": "Failed"
      },
      "modal": {
        "title": "Task Details",
        "close": "Close",
        "status": "Status:",
        "created": "Created Time:",
        "tokens": "Token Usage:",
        "executionLog": "Execution Log"
      }
    },
    "conversations": {
      "messageCount": "messages",
      "tokens": "tokens",
      "lastMessage": "Last Message:",
      "viewDetails": "View Details",
      "anonymous": "Anonymous User",
      "details": "Conversation Details",
      "user": "User",
      "agent": "Agent",
      "lastUpdate": "Last Update",
      "messages": "Messages",
      "statusLabel": "Status",
      "status": {
        "active": "Active",
        "paused": "Paused",
        "completed": "Completed",
        "archived": "Archived"
      },
      "loading": "Loading conversations...",
      "noConversations": "No conversations available",
      "error": "Failed to load conversations"
    }
  },
  "common": {
    "loading": "Loading...",
    "error": "Error",
    "retry": "Retry",
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "view": "View",
    "close": "Close",
    "confirm": "Confirm",
    "system": "System",
    "unassigned": "Unassigned",
    "unknown": "Unknown",
    "locale": "en-US",
    "unset": "Not set",
    "switchLanguage": "Switch Language"
  },
  "knowledge": {
    "title": "Knowledge Base Management",
    "subtitle": "Manage website indexing and knowledge base content",
    "addButton": "Index New Website",
    "stats": {
      "total": "Total Websites",
      "active": "Active Indexes",
      "indexed": "Indexed Pages",
      "processing": "Processing"
    },
    "table": {
      "title": "Knowledge Base List",
      "refresh": "Refresh",
      "allStatus": "All Status",
      "url": "Website URL",
      "status": "Status",
      "progress": "Progress",
      "pages": "Indexed Pages",
      "created": "Created Time",
      "updated": "Last Updated",
      "actions": "Actions",
      "view": "View Details"
    },
    "status": {
      "queued": "Queued",
      "crawling": "Crawling",
      "indexing": "Indexing",
      "active": "Active",
      "failed": "Failed"
    },
    "modal": {
      "add": {
        "title": "Index New Website",
        "url": "Website URL",
        "urlPlaceholder": "https://example.com",
        "urlHelp": "Enter the complete website URL, the system will automatically crawl and index the website content",
        "demoNotice": "Website Demo - For Initial Knowledge Base Setup",
        "demoDescription": "This is a demonstration version. The system will call the Orchestrator service to build a RAG knowledge base through Cloud Run, storing data in Firebase and Vertex AI Search for intelligent retrieval.",
        "cancel": "Cancel",
        "submit": "Start Indexing",
        "submitting": "Submitting..."
      },
      "details": {
        "title": "Knowledge Base Details",
        "basicInfo": "Basic Information",
        "url": "Website URL:",
        "status": "Status:",
        "created": "Created Time:",
        "updated": "Last Updated:",
        "stats": "Indexing Statistics",
        "indexedPages": "Indexed Pages",
        "totalPages": "Total Discovered Pages",
        "progress": "Completion Progress",
        "error": "Error Information",
        "metadata": "Metadata",
        "indexedContent": "Indexed Content",
        "loadingContent": "Loading content...",
        "noContent": "No content available",
        "untitledPage": "Untitled Page",
        "characters": "characters",
        "chunks": "chunks"
      }
    },
    "errors": {
      "indexFailed": "Indexing failed: {error}",
      "loadFailed": "Failed to load knowledge base data",
      "unknown": "Unknown error"
    }
  },
  "loading": {
    "tasks": "Loading task data...",
    "agents": "Loading agent data...",
    "knowledge": "Loading knowledge base...",
    "strategy": "Initializing business consultant...",
    "default": "Loading..."
  }
}
